#!/usr/bin/env python3
import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk, Gdk, Pango
import subprocess
import sys
import wmovertools as wmt

button_hsize = 80; button_vsize = 50

class Splash(Gtk.Window):

    def __init__(self):
        Gtk.Window.__init__(self, title="w_moversplash")
        maingrid = Gtk.Grid() 
        self.add(maingrid)
        maingrid.set_border_width(0)
        wcontext = self.get_style_context()
        wcontext.add_class("moverwindow")
        n_spaces = len(wmt.get(["wmctrl", "-d"]).splitlines())
        # create button- row
        for n in range(n_spaces):
            button = Gtk.Button(str(n+1))
            st_cont = button.get_style_context()
            st_cont.add_class("moverbutton")
            button.set_size_request(button_hsize, button_vsize)
            maingrid.attach(button, n, 0, 1, 1)
            button.modify_font(Pango.FontDescription('Ubuntu 15'))
            button.connect("clicked", self.move_to, subj, n)
        x_size = n_spaces*button_hsize
        self.move(x_res/2-x_size/2, y_res-180)

    def move_to(self, button, subj, wspace):
        wmt.run(["wmctrl", "-ir", subj.strip(), "-t", str(wspace)])
        wmt.run(["xdotool", "windowmove", subj, "100", "100"])
        self.stop()

    def stop(self, *args):
        Gtk.main_quit()

def run_moverbar():
    # get the style from the css file and apply it
    cssProvider = Gtk.CssProvider()
    cssProvider.load_from_path(
        '/opt/wmover/wmover/misc/style.css'
        )
    screen = Gdk.Screen.get_default()
    styleContext = Gtk.StyleContext()
    styleContext.add_provider_for_screen(
        screen,
        cssProvider,
        Gtk.STYLE_PROVIDER_PRIORITY_USER,
        )
    window = Splash()
    window.set_decorated(False)
    window.set_resizable(False)
    window.set_keep_above(True)
    window.set_wmclass("Wmover", "wmover")
    window.show_all()
    window.connect("destroy", Gtk.main_quit)
    Gtk.main()

if __name__ == "__main__":
    subj = sys.argv[1]; x_res= int(sys.argv[2]); y_res = int(sys.argv[3])
    run_moverbar()
